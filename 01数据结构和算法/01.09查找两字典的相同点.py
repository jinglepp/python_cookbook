# -*- coding: utf-8 -*-
# 在两个字典中寻找相同点(键,值)
a = {
    'x': 1,
    'y': 2,
    'z': 3
}

b = {
    'w': 10,
    'x': 11,
    'y': 2
}

# 可以直接对keys()或者items()执行集合操作
print(a.keys() & b.keys())  # {'y', 'x'}
print(a.keys() - b.keys())  # {'z'}
print(a.items() & b.items())  # {('y', 2)}

# 这可以用来过滤字典元素,常常以现有字典构造一个排行几个指定键的新字典
c = {key: a[key] for key in a.keys() - {'z', 'w'}}

# 字典keys()返回的对象支持集合操作(并集,交集,差集操作)
# items()返回的(键,值)对元素集合也支持集合操作
# values()方法类似,但是它不支持集合操作.因为值不能保证所有的值是唯一的.这样会导致集合操作出现问题.
# 如果非要执行集合操作的话,可以先将值集合转换成set,然后再执行集合操作.
